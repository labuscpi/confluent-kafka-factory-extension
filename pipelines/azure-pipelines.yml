pr:
- main

trigger:
  branches:
    include:
    - feature/*
    exclude:
    - feature/experimental/*
  paths:
    exclude:
    - README.md

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: BuildConfiguration
    value: Release

steps:
- checkout: self
  path: source
  persistCredentials: true
  clean: true
- task: SonarCloudPrepare@1
  displayName: Prepare analysis on SonarCloud
  inputs:
    SonarCloud: 2bacbeb2-b896-480b-b042-014939bb3807
    organization: labuscpi
    projectKey: labuscpi_confluent-kafka-factory-extension
    projectName: confluent-kafka-factory-extension
- task: DotNetCoreCLI@2
  displayName: dotnet restore
  inputs:
    command: restore
    projects: '**/*sln'
    verbosityRestore: Quiet
- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    command: 'build'
    projects: '**/*sln'
    arguments: '--configuration $(BuildConfiguration)'
- task: SonarCloudAnalyze@1
  displayName: Run Code Analysis
- task: SonarCloudPublish@1
  displayName: Publish Quality Gate Result



# - script: |
#     docker run \
#       -v "$(Build.SourcesDirectory):/app" \
#       -v "$(Build.ArtifactStagingDirectory):/reports" \
#       shiftleft/sast-scan scan --src /app --build \
#       --out_dir /reports/CodeAnalysisLogs
#   displayName: "Perform Scan"
#   continueOnError: "true"

# - task: PublishBuildArtifacts@1
#   displayName: "Publish analysis logs"
#   inputs:
#     PathtoPublish: "$(Build.ArtifactStagingDirectory)/CodeAnalysisLogs"
#     ArtifactName: "CodeAnalysisLogs"
#     publishLocation: "Container"

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'restore'
#     projects: '**/*.csproj'
#     verbosityRestore: 'Normal'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'build'
#     projects: '**/*.csproj'
#     arguments: '--configuration $(BuildConfiguration)'
